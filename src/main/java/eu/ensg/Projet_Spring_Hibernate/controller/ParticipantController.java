/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eu.ensg.Projet_Spring_Hibernate.controller;

import eu.ensg.Projet_Spring_Hibernate.model.*;
        
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.ui.Model;

@Controller // This means that this class is a Controller
@RequestMapping(path="/participant") // This means URL's start with /demo (after Application path)
public class ParticipantController {
    
  @Autowired // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private ParticipantRepository participantRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewParticipant (@RequestParam String name
      , @RequestParam String email, Model model) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Participant p = new Participant();
    p.setName(name);
    p.setEmail(email);
    participantRepository.save(p);
    
    model.addAttribute("participant", p);
    
    return "createParticipant";
  }

  @GetMapping(path="/all")
  public String getAllParticipant(Model model) {    //@ResponseBody Iterable<Participant>
    // This returns a JSON or XML with the users
    model.addAttribute("listParticipant", participantRepository.findAll());
    
    // Sen to view
    return "participantsList";
  }
}
